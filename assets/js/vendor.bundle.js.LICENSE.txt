/*
      timeout: 0,
      data: null,
      dataType: null,
      username: null,
      password: null,
      cache: null,
      throws: false,
      traditional: false,
      headers: {},
      */

/*
   * Create a callback list using the following parameters:
   *
   *	options: an optional list of space-separated options that will change how
   *			the callback list behaves or a more traditional option object
   *
   * By default a callback list will act like an event callback list and can be
   * "fired" multiple times.
   *
   * Possible options:
   *
   *	once:			will ensure the callback list can only be fired once (like a Deferred)
   *
   *	memory:			will keep track of previous values and will call any callback added
   *					after the list has been fired right away with the latest "memorized"
   *					values (like a Deferred)
   *
   *	unique:			will ensure a callback can only be added once (no duplicate in the list)
   *
   *	stopOnFalse:	interrupt callings when a callback returns false
   *
   */

/*
   * Helper functions for managing events -- not part of the public interface.
   * Props to Dean Edwards' addEvent library for many of the ideas.
   */

/* , ..., subordinateN */

/* 0 */

/* 1 */

/* 10 */

/* 11 */

/* 12 */

/* 13 */

/* 14 */

/* 15 */

/* 16 */

/* 17 */

/* 18 */

/* 19 */

/* 2 */

/* 20 */

/* 21 */

/* 22 */

/* 23 */

/* 24 */

/* 25 */

/* 26 */

/* 3 */

/* 4 */

/* 5 */

/* 6 */

/* 7 */

/* 8 */

/* 9 */

/* Attributes
      ---------------------------------------------------------------------- */

/* Chain conversions given the request and the original response
   * Also sets the responseXXX fields on the jqXHR instance
   */

/* Contains
      ---------------------------------------------------------------------- */

/* Handles responses to an ajax request:
   * - finds the right dataType (mediates between content-type and expected dataType)
   * - returns the corresponding response
   */

/* Internal Use Only */

/* Prefilters
   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
   * 2) These are called:
   *    - BEFORE asking for a transport
   *    - AFTER param serialization (s.data is a string if s.processData is true)
   * 3) key is the dataType
   * 4) the catchall symbol "*" can be used
   * 5) execution will start with transport dataType and THEN continue down to "*" if needed
   */

/* QSA/matchesSelector
      ---------------------------------------------------------------------- */

/* Sorting
      ---------------------------------------------------------------------- */

/* Transports bindings
   * 1) key is the dataType
   * 2) the catchall symbol "*" can be used
   * 3) selection will start with transport dataType and THEN go to "*" if needed
   */

/* WEBPACK VAR INJECTION */

/* eslint no-unused-vars: "off" */

/* eslint-disable no-param-reassign */

/* eslint-disable no-proto */

/* getElement(s)By*
      ---------------------------------------------------------------------- */

/* harmony default export */

/* harmony export (binding) */

/* harmony import */

/* internal */

/* jshint -W018 */

/* jshint eqeqeq: false */

/* jshint eqeqeq: true */

/* jshint ignore: end */

/* jshint ignore: start */

/* jshint validthis: true */

/* matches from matchExpr["CHILD"]
          	1 type (only|nth|...)
          	2 what (child|of-type)
          	3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
          	4 xn-component of xn+y argument ([+-]?\d*n|)
          	5 sign of xn-component
          	6 x of xn-component
          	7 sign of y-component
          	8 y of y-component
          */

/* unused harmony export Swiper */

/* unused harmony export extend */

/* unused harmony export isObject */

/* unused harmony export ssrDocument */

/* unused harmony export ssrWindow */

/*!
   * Sizzle CSS Selector Engine v2.2.1
   * http://sizzlejs.com/
   *
   * Copyright jQuery Foundation and other contributors
   * Released under the MIT license
   * http://jquery.org/license
   *
   * Date: 2015-10-17
   */

/*!
 * jQuery JavaScript Library v1.12.4
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-05-20T17:17Z
 */

/*! Lity - v2.4.1 - 2020-04-26
* http://sorgalla.com/lity/
* Copyright (c) 2015-2020 Jan Sorgalla; Licensed MIT */

/*#__PURE__*/

/**
     * A low-level selection function that works with Sizzle's compiled
     *  selector functions
     * @param {String|Function} selector A selector or a pre-compiled
     *  selector function built with Sizzle.compile
     * @param {Element} context
     * @param {Array} [results]
     * @param {Array} [seed] A set of elements to match against
     */

/**
     * Adds the same handler for all of the specified attrs
     * @param {String} attrs Pipe-separated list of attributes
     * @param {Function} handler The method that will be applied
     */

/**
     * Checks a node for validity as a Sizzle context
     * @param {Element|Object=} context
     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
     */

/**
     * Checks document order of two siblings
     * @param {Element} a
     * @param {Element} b
     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
     */

/**
     * Create key-value caches of limited size
     * @returns {function(string, object)} Returns the Object data after storing it on itself with
     *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
     *	deleting the oldest entry
     */

/**
     * Detects XML nodes
     * @param {Element|Object} elem An element or a document
     * @returns {Boolean} True iff elem is a non-HTML XML node
     */

/**
     * Document sorting and removing duplicates
     * @param {ArrayLike} results
     */

/**
     * Mark a function for special use by Sizzle
     * @param {Function} fn The function to mark
     */

/**
     * Returns a function to use in pseudos for buttons
     * @param {String} type
     */

/**
     * Returns a function to use in pseudos for input types
     * @param {String} type
     */

/**
     * Returns a function to use in pseudos for positionals
     * @param {Function} fn
     */

/**
     * Sets document-related variables once based on the current document
     * @param {Element|Object} [doc] An element or document object to use to set the document
     * @returns {Object} Returns the current document
     */

/**
     * Support testing using an element
     * @param {Function} fn Passed the created div and expects a boolean result
     */

/**
     * Utility function for retrieving the text value of an array of DOM nodes
     * @param {Array|Element} elem
     */

/**
   * Clean-up method for dom ready events
   */

/**
   * Gets a window from an element
   */

/**
   * Load a url into a page
   */

/**
   * Retrieve the actual display of a element
   * @param {String} name nodeName of the element
   * @param {Object} doc Document object
   */

/**
   * The ready event handler and self cleanup method
   */

/**
   * Try to determine the default display value of an element
   * @param {String} nodeName
   */

/**
 * Dom7 3.0.0
 * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API
 * https://framework7.io/docs/dom7.html
 *
 * Copyright 2020, Vladimir Kharlampidi
 *
 * Licensed under MIT
 *
 * Released on: November 9, 2020
 */

/**
 * SSR Window 3.0.0
 * Better handling for window object in SSR environment
 * https://github.com/nolimits4web/ssr-window
 *
 * Copyright 2020, Vladimir Kharlampidi
 *
 * Licensed under MIT
 *
 * Released on: November 9, 2020
 */

/**
 * Swiper 6.0.2
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * http://swiperjs.com
 *
 * Copyright 2014-2020 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: July 9, 2020
 */

/***/

//

//   but not by others (comment: 8; processing instruction: 7; etc.)

// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"

// "Whether an element is represented by a :lang() selector

// "table", "table-cell", or "table-caption"

// #11217 - WebKit loses check when the name is after the checked attribute

// #8545, #7054, preventing memory leaks for custom events in IE6-8

// #9682: remove data so that it's not used in an eventual retry

// '.swipe-handler',

// 'bullets' or 'progressbar' or 'fraction' or 'custom'

// 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'

// ( event )  dispatched jQuery.Event

// ( namespace ) or ( selector, types [, fn] )

// ( types [, fn] )

// ( types, data, fn )

// ( types, fn )

// ( types, selector, fn )

// ( types-Object, data )

// ( types-Object, selector, data )

// ( types-object [, selector] )

// (#11426)

// (IE normalizes it by default)

// (IE uses .cssText instead)

// (IE uses styleFloat instead of cssFloat)

// (IE6 & IE7) if it's in cache and has been

// (This is still attached to ajaxSettings for backward compatibility)

// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)

// (WebKit marks them as disabled)

// (avoids potential for endless recursion during removal of special event handlers)

// (excepting DocumentFragment context, where the methods don't exist)

// (excepting IE8 booleans)

// (for every problematic property) identical functions

// (it can always be set on a per-request basis or even using ajaxSetup)

// (no matter how long the jqXHR object will be used)

// (returning the new matched element set)

// (success with no data won't get notified, that's the best we

// (such as Node.js), expose a factory as module.exports.

// (such as loading iframes in IE - #4833)

// (the latter of which guarantees us context)

// (we check in cache first)

// -- API --

// -- Initialization --

// ...but Flash objects (which have this classid) *can* handle expandos

// ...but misinterprets leading-number strings, particularly hex literals ("0x...")

// ...in a gzip-friendly way

// ...intermediate processing is necessary

// ...otherwise use results directly

// .css('width')

// .css('width', '100px')

// .css({ width: '100px' })

// .cssText, that would destroy case sensitivity in URL's, like in "background"

// :(first|last|only)-(child|of-type)

// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),

// A central reference to the root jQuery(document)

// A counter to track how many items to wait for before

// A cross-domain request is in order when we have a protocol:host:port mismatch

// A fallback to window.onload, that will always work

// A global GUID counter for objects

// A match means we're done; a fail means we have to keep checking

// A simple way to check for HTML strings

// A special extend for ajax options

// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)

// Abort any current/pending executions

// Abort any pending executions

// Abort if not done already and return

// Abort if there are pending holds or we're already ready

// Abort manually if needed

// Accept quoted arguments as-is

// Accessing binary-data responseText throws an exception

// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)

// Accessing the selectedIndex property

// Accessing this property makes selected-by-default

// Active classes

// Actual Callbacks object

// Actual callback list

// Add Classes

// Add a callback or a collection of callbacks to the list

// Add a progress sentinel to prevent the fx queue from being

// Add anti-cache in url if needed

// Add button/input type pseudos

// Add elem as a property of the handle fn to prevent a memory leak

// Add elements passing elementMatchers directly to results

// Add elements to results, through postFinder if defined

// Add event listeners

// Add in properties whose names you wish to fix before

// Add in style property hooks for overriding the default

// Add list-specific methods

// Add matches to results

// Add nodes directly

// Add offsetParent borders

// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)

// Add relatedTarget, if necessary

// Add the callback

// Add the old object onto the stack (as a reference)

// Add the remaining (directly-bound) handlers

// Add the top/left cssHooks using jQuery.fn.position

// Add to the element's handler list, delegates in front

// Add to the list of active xhr callbacks

// Add which for click: 1 === left; 2 === middle; 3 === right

// Add which for key events

// Adjust and apply

// Alias method option to type as per ticket #12004

// All attributes are lowercase

// All done!

// All others

// Allow custom headers/mimetypes and early abort

// Allow instantiation without the 'new' keyword

// Allow special events to draw outside the lines

// Allow triggered, simulated change events (#11500)

// Also disable .add unless we have memory (since it would have no effect)

// Always assume duplicates if they aren't passed to the comparison function

// Always skip document fragments

// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse

// An object can be passed to jQuery.data instead of a key/value pair; this gets

// Android

// Animations created synchronously will run synchronously

// Append to fragment

// Apply converter (if not an equivalence)

// Apply custom fields if provided

// Apply postFilter

// Apply prefilters

// Apply relative offset (+=/-=) if specified

// Apply set filters to unmatched elements

// Apply the dataFilter if provided

// As in, an element does not contain itself

// As well, disconnected nodes are said to be in a document

// Assign to newCache so results back-propagate to previous elements

// Assume jQuery is ready without the ready module

// Assume reasonable values in the absence of getComputedStyle

// Assume that strings that start and end with <> are HTML and skip the regex check

// Attach a bunch of functions for handling common AJAX events

// Attach a single capturing handler on the document while someone wants focusin/focusout

// Attach deferreds

// Attach events

// Attach handlers for all browsers

// Attempt to parse using the native JSON parser first

// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors

// Autoheight

// Avoid an infinite loop by temporarily removing this function from the getter

// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression

// Avoid doing any more work than we need to when trying to get data on an

// Avoid exposing jQuery metadata on plain JS objects when the object

// Avoid hanging onto element (issue #299)

// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)

// Avoid setting ret to empty string here

// BMP codepoint

// Back Compat <1.8 extension point

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport

// Base inspection function for prefilters and transports

// Based off of the plugin by Clint Helfers, with permission.

// Because of IE, we also have to check the presence of the constructor property.

// Behaves like an Array's method, not like a jQuery method.

// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)

// Bind a function to a context, optionally partially applying any

// Bind script tag hack transport

// Bind the global event handler to the element

// Black-hole SVG <use> instance trees (#13180)

// BlackBerry 5, iOS 3 (original iPhone)

// Boolean attributes and "value" are not treated correctly

// Boolean attributes get special treatment (#10870)

// Boolean properties

// Break association with cloned elements by also using setAttribute (#9646)

// Breakpoints

// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)

// Build QSA regex

// Build a new jQuery matched element set

// Building a settings object

// Builds headers hashtable if needed

// Bulk operations run against the entire set

// But maintain support for old signatures

// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too

// CONCATENATED MODULE: ./node_modules/dom7/dom7.esm.js

// CONCATENATED MODULE: ./node_modules/swiper/esm/utils/get-browser.js

// CONCATENATED MODULE: ./node_modules/swiper/esm/utils/get-device.js

// CONCATENATED MODULE: ./node_modules/swiper/swiper.esm.js

// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters

// Cache response headers

// Cache the compiled function

// Cache the index of each encountered element

// Cache the tokens

// Caches the header

// Calculate pageX/Y if missing and clientX/Y available

// Calculate position if both inputs belong to the same document

// Call all callbacks with the given context and arguments

// Call all the callbacks with the given arguments

// Call complete if needed

// Call given func if any

// Call if it was a function and we have a response

// Call the postDispatch hook for the mapped type

// Call the preDispatch hook for the mapped type, and let it bail if desired

// Callback for when everything is done

// Callback if not abort

// Callbacks

// Callbacks context

// Called once

// Called only from within defaultDisplay

// Caller can pass in a jQuery.Event object, Object, or just an event type string

// Caller can pass in an object of custom data in lieu of the handler

// Can add propHook for "elements" to filter or add form elements

// Can be adjusted by the user

// Can use an empty set, since event contains the info

// Can't be in strict mode, several libs including ASP.NET trace

// Can't trust NodeList.length

// Cancel the request

// Capture executables

// Capture the context ID, setting it first if necessary

// Cast descendant combinators to space

// Catch cases where $(document).ready() is called

// Check against all ancestor/preceding elements

// Check against closest ancestor/preceding element

// Check each className given, space separated list

// Check for both converted-to-camel and non-converted data property names

// Check for getComputedStyle so that this code is not run in IE<9.

// Check for headers option

// Check if a disconnected checkbox will retain its checked

// Check if a given callback is in the list.

// Check if an input maintains its value after becoming a radio

// Check if b follows a

// Check if elements with layout shrink-wrap their children

// Check if getElementById returns elements by name

// Check if getElementsByTagName("*") returns only elements

// Check if natively block-level elements act like inline-block

// Check if table cells still have offsetWidth/Height when they are set

// Check if we can trust getAttribute("value")

// Check if we're dealing with a known content-type

// Check if we're setting a value

// Check parentNode to catch when Blackberry 4.6 returns

// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)

// Check to see if it's possible to do matchesSelector

// Check to see if we have a response for the expected dataType

// Checks the timer has not already been removed

// Children needs to return slot items

// Choose the first element that is related to our preferred document

// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending

// Class

// Class selector

// Classes

// Clean up

// Clean up if we're done firing for good

// Clean up the event in case it is being reused

// Clean-up function (fires after converters)

// Cleanup styles

// Clear all callbacks and values

// Clear input after sorting to release objects

// Clear timeout if it exists

// Clicks

// Clone any incoming data and prepend the event, creating the handler arg list

// Cloned elements keep attachEvent handlers, we use addEventListener on IE9+

// Combinators

// Comma and first run

// Commas must not follow "[", "{", or ","

// Compile and execute a filtering function if one is not provided

// Complete

// Computed unit is not pixels. Stop here and return.

// Condense equivalence converters

// Contents

// Context for global events is callbackContext if it is a DOM node or jQuery collection

// Convert "+=" or "-=" to relative numbers (#7345)

// Convert String-formatted options into Object-formatted ones

// Convert anything to text

// Convert dashed to camelCase; used by the css and data modules

// Convert data if not already a string

// Convert html into DOM nodes

// Convert no matter what (that way responseXXX fields are always set)

// Convert non-html into a text node

// Convert options from String-formatted to Object-formatted if needed

// Convert response if prev dataType is non-auto and differs from current

// Convert to each sequential dataType

// Copy the events from the original to the clone

// Counter for holding the number of active queries

// Create a timestamp if incoming event doesn't have one

// Create a writable copy of the event object and normalize some properties

// Create converters map with lowercased keys

// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods

// Create loop

// Create mouseenter/leave events using mouseover/out and event-time checks

// Create scrollLeft and scrollTop methods

// Create the final options object

// Create the request object

// Create transport if the browser can provide an xhr

// Creates a full fledged settings object into target

// Cross domain only allowed if supported through XMLHttpRequest

// Cross-browser xml parsing

// Cross-domain detection vars

// Cursor

// Data converters

// Default abort message

// Default jsonp settings

// Default speed

// Defend against cloned attroperties (jQuery gh-1709)

// Deferred helper

// Deferreds

// Define a local copy of jQuery

// Define the hook, we'll check on the first run if it's really needed.

// Defining this global in .jshintrc would create a danger of using the global

// Delegate to script

// Delegated event; lazy-add a change handler on descendant inputs

// Dereference the script

// Dereference transport for early garbage collection

// Descend through wrappers to the right content

// Deserialize a standard representation

// Destroy loop

// Destroy the cache

// Detach an event or set of events from an element

// Detach emitter events

// Detach events

// Detached nodes confoundingly follow *each other*

// Detect silently failing push.apply

// Detect, normalize options and install callbacks for jsonp requests

// Determine event propagation path in advance, per W3C events spec (#9951)

// Determine handlers

// Determine if request has content

// Determine if successful

// Determine new depth

// Determine support properties

// Determine the position of an element within

// Directions locks

// Disable .fire

// Disable .fire and .add

// Disable locks on resize

// Disable swiper and hide navigation when container not overflow

// Discard index placeholder values to get only actual matches

// Discard the second event of a jQuery.event.trigger() and

// Disconnected elements are considered hidden

// Disconnected nodes

// Div with explicit width and no margin-right incorrectly

// Do a sibling check if the nodes have a common ancestor

// Do not include comment or processing instruction nodes

// Do not set data on non-element DOM nodes because it will not be cleared (#8335).

// Do not traverse comment nodes

// Do send the request

// Do the same for pointerenter/pointerleave and pointerover/pointerout

// Document context

// Document location

// Document order sorting

// Does not return so that setAttribute is also used

// Don't attach events to noData or text/comment nodes (but allow plain objects)

// Don't automatically add "px" to these possibly-unitless properties

// Don't check non-elements (#13208)

// Don't conflict with Object.prototype properties (#13203)

// Don't consume trailing commas as valid

// Don't do events on text and comment nodes

// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)

// Don't get fooled by Object.prototype properties (jQuery #13807)

// Don't get/set attributes on text, comment and attribute nodes

// Don't get/set properties on text, comment and attribute nodes

// Don't keep the element (issue #299)

// Don't pass non-elements to Sizzle

// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)

// Don't re-trigger an onFOO event when we call its FOO() method

// Don't return options that are disabled or in a disabled optgroup

// Don't set styles on text and comment nodes

// Duplicate to all looped slides

// ESC key

// EXTERNAL MODULE: ./node_modules/ssr-window/ssr-window.esm.js

// EXTERNAL MODULE: ./node_modules/swiper/esm/utils/dom.js + 1 modules

// EXTERNAL MODULE: ./node_modules/swiper/esm/utils/utils.js

// Easily-parseable/retrievable ID or TAG or CLASS selectors

// Easy API for creating new setFilters

// Effects

// Element contains another

// Element context

// Element/input types

// Emit

// Emit orientationchange

// Emit resize

// Empty animations, or finishing resolves immediately

// Enforce case-sensitivity of name attribute

// Enforce single-firing

// Ensure a safe fragment

// Ensure firing before onload, maybe late but safe also for iframes

// Ensure that the destination node is not null; Fixes #9587

// Evaluate executable scripts on first document insertion

// Evaluate text as a json expression

// Event data gets referenced instead of copied if the expando gets copied too

// Event object

// Events bubbling up the document may have been marked as prevented

// Exclude scripts to avoid IE 'Permission Denied' errors

// Execute ASAP in case we need to set body.style.zoom

// Execute a callback for every element in the matched set.

// Execute callbacks for all pending executions,

// Execute immediately if ready is not present

// Execute the appropriate callbacks

// Exit early if the nodes are identical

// Expand context for sibling selectors

// Export object

// Expose jQuery and $ identifiers, even in

// Expose support vars for convenience

// Extend Swiper

// Extend defaults with modules params

// Extend defaults with passed params

// Extend params

// Extend the base object

// Extending ajaxSettings

// Extract dataTypes list

// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)

// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"

// Fake xhr

// Fall back to computed then uncomputed css if necessary

// Fall back to style even without computed

// Fallback to prop when attributes are not supported

// Fallback to seeking `elem` from the start

// Fetch a seed set for right-to-left matching

// Filter out possible comments

// Filter status for non standard behaviors

// Filters

// Find Wrapper

// Find current slide

// Find current slide size

// Find delegate handlers

// Find el

// Find new height from highest slide in view

// Find primary matches

// Find slides currently in view

// Find the next relative operator (if any) for proper handling

// Finish early in limited (non-browser) environments

// Fire callbacks

// Fire handlers on the event path

// Fire native event if possible so blur/focus sequence is correct

// Firefox doesn't alert if the returnValue field is not set.

// Firefox doesn't have focus(in | out) events

// Firefox throws an exception when accessing

// First Try to find as-is property data

// First batch of tests.

// First check that getClientRects works as expected

// Fix #11356: Clear elements from fragment

// Fix #11809: Avoid leaking memory

// Fix #12392 for WebKit and IE > 9

// Fix #12392 for oldIE

// Fix For Negative Oversliding

// Fix For Positive Oversliding

// Fix all IE cloning issues

// Fix duration

// Fix name and attach hooks

// Fix target property (#1925)

// Fixed elements are offset from window (parentOffset = {top:0, left: 0},

// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,

// Fixes #9887

// Fixes bug #9237

// Fixing value retrieval on a button requires this module

// Flag for duplicate removal

// Flag to know if list is currently firing

// Flag to know if list was already fired

// Flag to prevent firing

// Flatten any nested arrays

// For CommonJS and CommonJS-like environments where a proper `window`

// For all other browsers, use the standard XMLHttpRequest object

// For checkbox, fire native event so checked state will be right

// For cross-browser consistency, don't fire native .click() on links

// For cross-domain requests, seeing as conditions for a preflight are

// For each dataType in the dataTypeExpression

// For environments that do not have a `window` with a `document`

// For faster swipes, also apply limits (albeit higher ones).

// For internal use only.

// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)

// For mouseenter/leave call the handler if related is outside the target.

// For options that shouldn't be deep extended:

// For same-domain requests, won't change header if already provided.

// For use in libraries implementing .is()

// Force browsers to behave consistently when non-matching value is set

// Force callback invocation

// Force it by setting the zoom level

// Force options to be an object

// Force termination if we see a misplaced comma

// Forget the data if we're done with it

// Form elements to match

// Free mode

// From the awesome hack by Dean Edwards

// Functions to create xhrs

// Gecko does not error, returns false instead

// Generate a function of recursive functions that can be used to check each element

// Generate parameters to create a standard animation

// Generate shortcuts for custom animations

// Get *real* offsetParent

// Get a promise for this deferred

// Get a promise resolved when queues of a certain type

// Get and set the style property on a DOM Node

// Get attr

// Get breakpoint for window width

// Get breakpoint for window width and update parameters

// Get callback name, remembering preexisting value associated with it

// Get correct offsets

// Get document width or height

// Get excess from tokenize (recursively)

// Get initial elements from seed or context

// Get real index

// Get response data

// Get the Nth element in the matched element set OR

// Get the final matcherOut by condensing this intermediate into postFinder contexts

// Get the specific value for the option

// Get the style information from getAttribute

// Get the whole matched element set as a clean array

// Get transport

// Get width or height on the element, requesting but not forcing parseFloat

// Gets

// Gets all values

// Gets one value

// Give the init function the jQuery prototype for later instantiation

// Go through every key on the object,

// Go through the array, only saving the items

// Go through the array, translating each of the items to their new values

// Grab Cursor

// Grab necessary hook if one is defined

// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains

// Guard against undefined "subtract", e.g., when used as in cssHooks

// HANDLE: $(""), $(null), $(undefined), $(false)

// HANDLE: $(#id)

// HANDLE: $(DOMElement)

// HANDLE: $(expr, $(...))

// HANDLE: $(html) -> $(array)

// HANDLE: $(html, props)

// Handle HTML strings

// Handle a deep copy situation

// Handle cache's special case and global

// Handle case when target is a string or something (possible in deep copy)

// Handle event binding

// Handle falsy url in the settings object (#10093: consistency with old signature)

// Handle firing indexes

// Handle iff the expected data type is "jsonp" or we have a parameter to set

// Handle it asynchronously to allow scripts the opportunity to delay ready

// Handle iteration over inherited properties before own properties.

// Handle memory leak in IE

// Handle multiple events separated by a space

// Handle state

// Handle the case where IE and Opera return items

// Handle the global AJAX counter

// Handle when the DOM is ready

// Handler might be "removed" by setting callback to null

// Headers (they are sent all at once)

// Hold (or release) the ready event

// Hook needed; redefine it so that the support test is not executed again.

// Hook not needed (or it's not possible to use it due

// Hooks for boolean attributes

// ID find and filter

// ID selector

// IE

// IE 9's matchesSelector returns false on disconnected nodes

// IE blanks contents when cloning scripts, and tries to evaluate newly-set text

// IE change delegation and checkbox/radio fix

// IE creates expando attributes along with the property

// IE does not allow us to delete expando properties from nodes

// IE does not have a removeAttribute function on Document nodes

// IE doesn't fire change on a check/radio until blur; trigger it on click

// IE has trouble with opacity if it does not have layout

// IE leaves an \r character at EOL

// IE returns zIndex value as an integer.

// IE seems to error on cross-domain PATCH requests when ActiveX XHR

// IE strips leading whitespace when .innerHTML is used

// IE submit delegation

// IE throws on elements created in popups

// IE uses filters for opacity

// IE will insert them into empty tables

// IE's ActiveXObject throws a 'Type Mismatch' exception when setting

// IE6-7 get confused and end up setting the value of a cloned

// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,

// IE6-8 copies events bound via attachEvent when using cloneNode.

// IE6-8 fails to persist the checked state of a cloned checkbox

// IE6/7 call enctype encoding

// IE6/7 do not support getting/setting some attributes with get/setAttribute

// IE8 throws error here and will not see later tests

// IE8,9 Will throw exceptions on certain host objects #9897

// IE<8 needs the *property* name

// IE<9 dies on focus/blur to hidden element (#1486,#12518)

// If "name" is an array of keys...

// If "type" variable is undefined, then "GET" method will be used.

// If IE and not a frame

// If a data property was specified

// If a hook was provided get the computed value from there

// If a hook was provided get the non-computed value from there

// If a normal DOM Ready event fired, decrement, and wait if need be

// If a number was passed in, add the unit (except for certain CSS properties)

// If a selector was specified, locate the right elements in a dummy div

// If an array was passed in, assume that it is an array of form elements.

// If conv2 outputs current

// If data is available, append data to url

// If event changes its type, use the special event handlers for the changed type

// If form was submitted by the user, bubble the event up the tree

// If freeModeSticky is active and the user ends a swipe with a slow-velocity

// If it receives a jQuery object, the first element is used

// If it works, we need attrFixes when doing get/setAttribute (ie6/7)

// If it's a function

// If no argument is given, return whether or not list has callbacks attached.

// If no nodeType, this is expected to be an array

// If no transport, we auto-abort

// If nobody prevented the default action, do it now

// If none found, seek a pair

// If nothing was found internally, try to fetch any

// If obj is provided, the promise aspect is added to the object

// If prev can be converted to accepted input

// If preventDefault exists, run it on the original event

// If previous iteration zeroed out, double until we get *something*.

// If previous value didn't exist - remove it

// If request was aborted inside a prefilter, stop there

// If request was aborted inside ajaxSend, stop there

// If resolveValues consist of only a single Deferred, just use that.

// If seed is empty or no tokens remain, we can return early

// If selector defined, determine special event api type, otherwise given type

// If set returns undefined, fall back to normal setting

// If stopPropagation exists, run it on the original event

// If successful, handle type chaining

// If target is omitted, writes into ajaxSettings.

// If the element has a class name or if we're passed "false",

// If the fx queue is dequeued, always remove the progress sentinel

// If the nodes are siblings, we can do a quick check

// If the preceding token was a descendant combinator, insert an implicit any-element `*`

// If the request is local and we have data: assume a success

// If the selector is sufficiently simple, try using a "get*By*" DOM method

// If the simple way fails, read from inside an iframe

// If the src has innerHTML and the destination does not,

// If there are functions bound, to execute

// If there is already a '_' parameter, set its value

// If there is already no cache entry for this object, there is no

// If there is dataShow left over from a stopped hide or show

// If there is no data left in the cache, we want to continue

// If this is a noop like .hide().hide(), restore an overwritten display value

// If this is a positional/relative selector, check membership in the returned set

// If this is a select, ensure that it displays empty (#12336)

// If traditional, encode the "old" way (the way 1.3.2 or older

// If url is an object, simulate pre-1.5 signature

// If value is a function, invoke it and return its value

// If we already have the right measurement, avoid augmentation

// If we don't have gBCR, just use 0,0 rather than error

// If we error on focus to hidden element (#1486, #12518),

// If we found a dataType

// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,

// If we have elements to modify, make the request

// If we have memory from a past run, we should fire after adding

// If we're in sync mode we fire the callback

// If we're not dealing with a regular pixel number

// Ignore exceptions, eg. for SVG elements which can't be

// Images

// Implement the identical functionality for filter and not

// In CSS3, :checked should return both checked and selected elements

// In IE/Edge using regex groups here causes severe slowdowns.

// In-page `selector#id sibing-combinator selector` fails

// Includes some event props shared by KeyEvent and MouseEvent

// Incorporate the offset, then check against cycle size

// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that

// Index of currently firing callback (modified by add/remove as needed)

// Indexes

// Init

// Init Flag

// Init the element's event structure and main handler, if this is the first

// Init the event handler queue if we're the first

// Initialize a jQuery object

// Initialize against the default document

// Initialize central reference

// Insert callback into url or form data

// Inspect recursively

// Install Modules

// Install callback

// Install callbacks on deferreds

// Install script dataType

// Instance methods

// Instance-specific data

// Intentionally let the error be thrown if parseHTML is not present

// Internals

// Is the DOM ready to be used? Set to true once it occurs.

// It's easy to see this when simulating touch with mouse events. To fix this,

// Item is non-scalar (array or object), encode its numeric index.

// Iteratively approximate from a nonzero starting point

// JSHint would error on this code due to the Symbol not being defined in ES5.

// Jump to end and forget the data so .add doesn't re-fire

// Keep a copy of the old load method

// Keep an empty list if we have data for future add calls

// Keep domManip exposed until 3.0 (gh-2225)

// Keep pipe for back-compat

// Keep references to cloned scripts for later restoration

// Keep track of which events have ever been used, for event optimization

// Keys separate source (or catchall "*") and destination types with a single space

// Kick off the DOM ready check even if the user does not

// Last click time

// Last fire value for non-forgettable lists

// Last-Modified header cache for next request

// Latest Chrome and webkits Fix

// Lazy-add a submit handler when a descendant form may potentially be submitted

// Lazy-add the new callback in a way that preserves old ones

// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter

// Lengthen the array for every element, matched or not

// Leverage slice if possible

// Listener

// Live events

// Local document vars

// Locks

// Long touches

// Loop through all the selected options

// Loop variable

// Main method

// Make a writable jQuery.Event from the native event object

// Make sure it's not a disconnected DOM node

// Make sure textarea (and checkbox) defaultValue is properly cloned

// Make sure that DOM nodes and window objects don't pass through, as well

// Make sure that URLs aren't manipulated

// Make sure that a selected-by-default option has a working selected property.

// Make sure that attribute selectors are quoted

// Make sure that element opacity exists (as opposed to filter)

// Make sure that it also works with optgroups, see #5701

// Make sure that link elements get serialized correctly by innerHTML

// Make sure that nothing sneaks out

// Make sure that null and NaN values aren't set. See: #7116

// Make sure that tbody elements aren't automatically inserted

// Make sure that the handler has a unique ID, used to find/remove it later

// Make sure that the options inside disabled selects aren't marked as disabled

// Make sure that we're working with the right name

// Make sure we set the data so it isn't changed later

// Make sure we trim BOM and NBSP

// Make sure we update the tween properties later on

// Make the changes, replacing each non-ignored context element with the new content

// Make the deferred a promise

// Make this explicit, since user can override this through ajaxSetup (#11264)

// Make value of this field explicit since

// Makes sure cloning an html5 element does not cause problems

// Manipulating tables requires a tbody

// Manually add leading whitespace removed by IE

// Map over jQuery in case of overwrite

// Map over the $ in case of overwrite

// Mark it as fixed

// Mark scripts as having already been evaluated

// Match elements found at the specified indexes

// Match elements unmatched by `matcher`

// Match html or make sure no context is specified for #id

// Matches dashed string for camelizing

// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668

// Microsoft forgot to hump their vendor prefix (#9572)

// Minified: var a,b,c,d

// Minified: var b,c,d

// Miscellaneous

// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()

// Module create callback

// More options handling for requests with no content

// Move matched elements from seed to results to keep them synchronized

// Move the given value to match[3] whether quoted or unquoted

// Multi-Selects return an array

// Multifunctional method to get and set values of a collection

// Must be an Object.

// NB: No relatedTarget if the mouse left/entered the browser window

// NEW

// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`

// NS

// NaN means non-codepoint

// Namespaced trigger; create a regexp to match event type in handle()

// Native handler

// Need init if jQuery is called (just allow error to be thrown if not included)

// Needed because $( selector, context ) becomes $( context ).find( selector )

// Never move original objects, clone them

// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"

// Next Slide

// No argument, return index in parent

// No support

// Node name check avoids a VML-related crash in IE (#9807)

// Nodes accept data unless otherwise specified; rejection can be conditional

// Normalize "", auto, and prepare for extra

// Normalize slideIndex

// Not own constructor property must be Object

// Note: IE uppercases css property names, but if we were to .toLowerCase()

// Note: button is not normalized, so don't use it

// Note: most support tests are defined in their respective modules.

// Note: this condition won't catch Edge as it doesn't define

// Nothing should be selected when empty strings follow ^= or $= or *=

// Null elements to avoid leaks in IE.

// Nullify elem to prevent memory leaks in IE

// Object

// Observe container

// Observe wrapper

// Older IE sometimes signals "interactive" too soon

// Once for each type.namespace in types; type may be omitted

// One-time assignments

// Only DOM nodes need a new unique ID for each element since their data

// Only DOM nodes need the global jQuery cache; JS object data is

// Only add window if we got to document (e.g., not plain obj or detached DOM)

// Only assign if different to avoid unneeded rendering.

// Only convert to a number if it doesn't change the string

// Only deal with non-null/undefined values

// Only defining an ID for JS objects if its cache already exists allows

// Only keep the most recent entries

// Only need this for delegated form submit events

// Only use addEventListener/attachEvent if the special events handler returns false

// Open requests must be manually aborted on unload (#5280)

// Open the socket

// Opera 10-11 does not throw on post-comma invalid pseudos

// Opera reports offsetWidths and offsetHeights less than zero on some elements

// Operate on a copy of prop so per-property easing won't be lost

// Operator (capture 2)

// Optimize for push.apply( _, NodeList )

// Optional AJAX dependency, but won't run scripts if not present

// Or just use first one

// Otherwise add one to the end

// Otherwise append directly

// Otherwise bring back whatever was previously saved (if anything),

// Otherwise initialize for horizontal or vertical properties

// Otherwise just get the value from the style object

// Otherwise nodes in our document sort first

// Otherwise use the full result

// Otherwise we know they are disconnected

// Otherwise we need full lists of their ancestors for comparison

// Otherwise, if a way to get the computed value exists, use that

// Otherwise, throw an error or return tokens

// Otherwise, we inject the element directly into the jQuery object

// Override manipulation of globals by nested matchers

// Override mime type if needed

// Overrides

// Overrides response content-type header

// Own properties are enumerated firstly, so to speed up,

// Panic based approach to setting things on disconnected nodes

// Parentless nodes are either documents or disconnected

// Parse text as xml

// Passive Listeners

// Perform no more replacements after returning to outermost depth

// Piggyback on a donor event to simulate a different one

// Populate the class2type map

// Position-in-collection

// Potentially complex pseudos

// Precompiled matchers will still verify ancestry, so step up a level

// Prefilter to get matcher input, preserving a map for seed-results synchronization

// Prefix every selector in the list

// Prepend if requested

// Preserve script evaluation history

// Prev Slide

// Prevent IE 6 from affecting layout for positioned elements #11048

// Prevent IE from shrinking the body in IE 7 mode #12869

// Prevent Links Clicks

// Prevent attribute/property "interpolation"

// Prevent never-ending loop

// Prevent re-triggering of the same event, since we already bubbled it above

// Prevent triggered image.load events from bubbling to window.load

// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)

// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters

// Progress

// Propagate exception as error if not done

// Properties of context are called as methods if possible

// Props

// Provide `match` to avoid retokenization if we modified the selector above

// Purposefully self-exclusive

// Put explicitly provided properties onto the event object

// Put in the new values to get a computed value out

// QSA and matchesSelector support

// Queue of execution data for repeatable lists

// Queueing

// Quick check to determine if target is callable, in the spec

// RTL

// Radios and checkboxes getter/setter

// Raw string

// Record all 3 overflow attributes because IE does not

// Recurse if we're merging plain objects or arrays

// Reduce context if the leading compound selector is an ID

// Reenable scripts

// Regex strategy adopted from Diego Perini

// Register the callback, but delay it in case `xhr.send` throws

// Regular expressions

// Reintegrate element matches to eliminate the need for sorting

// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787

// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857

// Remember that setFilters inherits from pseudos

// Remember that the DOM is ready

// Remember the old values, and insert the new ones

// Remember the original values

// Remember the top-level container for proper cleanup

// Remove *all* instances

// Remove IE's autoinserted <tbody> from table fragments

// Remove a callback from the list

// Remove all callbacks from the list

// Remove any remaining nodes

// Remove auto dataType and get content-type in the process

// Remove boolean attributes when set to false

// Remove cache only if it was not already removed by jQuery.event.remove

// Remove delegated handlers; cleanData eventually reaps submit handlers attached above

// Remove duplicated slides

// Remove duplicates

// Remove element nodes and prevent memory leaks

// Remove from its parent by default

// Remove generic event handler if we removed something and no more handlers exist

// Remove hash character (#7531: and string promotion)

// Remove last grid elements depending on width

// Remove matching events

// Remove the expando if it's no longer used

// Remove the script

// Removing the function wrapper causes a "Permission Denied"

// Render Container

// Render || Update Pagination bullets/items

// Replace/restore the type attribute of script elements for safe DOM manipulation

// Reset CSS: box-sizing; display; margin; border

// Reset CSS: box-sizing; display; margin; border; padding

// Reset defaultChecked for any radios and checkboxes

// Reset the inline display of this element to learn if it is

// Reset value to default in case type is set after value during creation

// Resistance

// Resize handler

// Response headers

// Response headers as string

// Restore matcherIn since elem is not yet a final match

// Return Grab Cursor

// Return all the elements in a clean array

// Return app instance

// Return early from calls with invalid selector or context

// Return early if doc is invalid or already selected

// Return jQuery for attributes-only inclusion

// Return just the one element from the set

// Return locks after resize

// Return special upon seeing a positional matcher

// Return the cloned set

// Return the length of the invalid excess

// Return the modified object

// Return the newly-formed element set

// Return the resulting serialization

// Return undefined in the case of empty string

// Return, converting to number if forced or a qualifier was provided and val looks numeric

// Reuse newcache so results back-propagate to previous elements

// Reverse direction for :only-* (if we haven't yet done so)

// Reverse order for parents* and prev-derivatives

// Revert the changed values

// Revert the old values

// Round length

// Run callback and check for early termination

// Run delegates first; they may want to stop propagation beneath us

// Run inline and iframe handlers after all other handlers

// Running getBoundingClientRect on a disconnected node in IE throws an error

// Safari sends mouseenter too often; see:

// Save Dom lib

// Save back as free

// Save locks

// Save response for use in complete callback

// Save selector and tokenization

// Save the URL in case we're toying with the If-Modified-Since

// See #13393 for more info

// See http://bugs.jquery.com/ticket/13378

// See https://connect.microsoft.com/IE/feedback/details/1736512/

// See https://github.com/jquery/sizzle/pull/225

// See https://support.microsoft.com/kb/2856746 for more info

// See if we can take a shortcut and just use innerHTML

// See jQuery.data for more information

// See setDocument()

// See test/unit/core.js for details concerning isFunction.

// See ticket #14549 for more info.

// Seedless set matches succeeding multiple successful matchers stipulate sorting

// Seek `elem` from a previously-cached index

// Seek a direct converter

// Segment location into parts

// Select is set to empty string on purpose

// Send global event

// Serialize an array of form elements or a set of

// Serialize array item.

// Serialize object item.

// Serialize scalar item.

// Serialize the form elements

// Set Grab Cursor

// Set attrs

// Set breakpoint

// Set contenteditable to false on removals(#10429)

// Set corresponding property to false

// Set data for the fake xhr object

// Set display property to inline-block for height/width

// Set document vars if needed

// Set elements which have been overridden with display: none

// Set headers

// Set readyState

// Set slides order

// Set the Accepts header for the server, depending on the dataType

// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.

// Set the cancelBubble property of the original event to true

// Set the correct header, if data is being sent

// Set the display of most of the elements in a second loop

// Set the existing or create a new attribute node

// Set the guid of unique handler to the same of original handler, so it can be removed

// Set traditional to true for jQuery <= 1.3.2 behavior.

// Set width and height to auto instead of 0 on empty string( Bug #8150 )

// Set width or height on the element

// Set wrapper width

// Sets many values

// Sets multiple values

// Sets one value

// Setting style.filter to null, "" & " " still leave "filter:" in the cssText

// Setting the type on a radio button after the value resets the value in IE8-9

// Setting to empty string throws an error as an invalid value

// Setup

// Short swipes

// Shortcut for :nth-*(n)

// Should return 1, but returns 4 (following)

// Simulated bind

// Since attributes and properties are the same in IE,

// Since there is no way to tell _how_ a key was added, remove

// Since version 1.3, DOM methods and functions like alert

// Single tag

// Skip accessing in sparse arrays

// Skip elements already in the context collection (trac-4087)

// Slide To Initial Slide

// Slides

// Slides grid

// So, we allow :focus to pass through QSA all the time to avoid the IE error

// Some attributes are constructed with empty-string values when not defined

// Some attributes require a special call on IE

// Some old versions of Webkit choke when 'none' is passed; pass

// Some styles come back with percentage values, even though they shouldn't

// Sort on method existence if only one input has compareDocumentPosition

// Sort stability

// Special expections of .data basically thwart jQuery.access,

// Speed up dequeue by getting out quickly if this is just a lookup

// Standards-based browsers support DOMContentLoaded

// Start with an empty selector

// Start with offset property, which is equivalent to the border-box value

// Starting value computation is required for potential unit mismatches

// State is "done" now

// Status-dependent callbacks

// Store the correct default display

// Strict HTML recognition (#11290: must start with <)

// String

// String was a <table>, *may* have spurious <tbody>

// String was a bare <thead> or <tfoot>

// Strip and collapse whitespace

// Subtract paddings

// Subtract parent offsets and element margins

// Success/Error

// Supplemental Plane codepoint (surrogate pair)

// Support (at least): Chrome, IE9

// Support array or space separated string names for data keys

// Support: Android 2.3

// Support: Android 2.3 only

// Support: Android 4.0 - 4.3 only

// Support: Android 4.0-4.3

// Support: Android<4.0

// Support: Android<4.1, IE<9

// Support: Android<4.1, PhantomJS<2

// Support: Chrome 14-35+

// Support: Chrome, Safari

// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+

// Support: Firefox

// Support: Firefox 18+

// Support: Firefox 20+

// Support: Firefox<24

// Support: Firefox<29, Android 2.3

// Support: Firefox<=42+

// Support: IE

// Support: IE 10-11, Edge 10240+

// Support: IE 11

// Support: IE 9-11

// Support: IE 9-11, Edge

// Support: IE < 9, Android < 4.0

// Support: IE <9 only

// Support: IE <=8

// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37

// Support: IE <=9

// Support: IE, Opera, Webkit

// Support: IE10-11+

// Support: IE11+

// Support: IE6

// Support: IE6-10

// Support: IE6-8

// Support: IE6-IE11+

// Support: IE6-IE8

// Support: IE6/7

// Support: IE8

// Support: IE8 only

// Support: IE8, Opera 11-12.16

// Support: IE8-IE9

// Support: IE9

// Support: IE<10

// Support: IE<8

// Support: IE<9

// Support: IE<9 (lack submit/change bubble), Firefox (lack focus(in | out) events)

// Support: IE<9, Safari

// Support: IE<=11+

// Support: IE<=11+, Firefox<=30+ (#15098, #14150)

// Support: Opera 12.1x only

// Support: Opera <= 12.12

// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3

// Support: Safari 6-8+

// Support: Safari 7 only

// Support: Safari 8+, iOS 8+

// Support: Safari, IE9+

// Support: Safari<7-8+, Chrome<37-44+

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)

// Support: Windows 8 Native Apps

// Support: Windows Web Apps (WWA)

// Support: iOS 8.2 (not reproducible in simulator)

// Swallow errors from 'invalid' CSS values (#5509)

// Swallow native change events from checkbox/radio, we already triggered them above

// Swiper Instance

// Swiping/no swiping

// TAB key

// TODO: identify versions

// Tag

// Take advantage of querySelectorAll

// Take an array of elements and push it onto the stack

// Tap, doubleTap, Click

// Target should not be a text node (#504, #13143)

// Teardown

// Test for null|undefined property data

// Test setAttribute on camelCase class.

// Tests for enctype support on a form (#6743)

// Text to html (true = no transformation)

// The attrs elements can be null (#14894)

// The broken getElementById methods don't pick up programatically-set names,

// The current translate is before the current snap index, so the choice

// The current translate is on or after the current snap index, so the choice

// The current version of jQuery being used

// The default length of a jQuery object is 0

// The elements to wrap the target around

// The following elements (space-suffixed to avoid Object.prototype collisions)

// The foundational matcher ensures that elements are reachable from top-level context(s)

// The getter ensures a default option is selected

// The identifier C does not have to be a valid language name."

// The jQuery object is actually just the init constructor 'enhanced'

// The jqXHR state

// The matching of C against the element's language value is performed case-insensitively.

// The number of elements contained in the matched element set

// The observerUpdate event should only be triggered

// The test attribute must be unknown in Opera but "safe" for WinRT

// The type and name attributes are restricted during .innerHTML assignment

// The url can be an options object (which then must have .url)

// The user may use createPseudo to indicate that

// The value/s can optionally be executed if it's a function

// There *must* be a type, no attaching namespace-only handlers

// There would be no events with distance zero, so the last event is stale.

// There's only work to do if current dataType is non-auto

// These hooks are used by animate to expand properties

// They will have gone through all possible matchers

// This "if" is needed for plain objects

// This accentuates the need for the creation of a real `window`.

// This expression is here for better compressibility (see addClass)

// This fixes almost every IE6/7 issue

// This is for removals

// This is to test IE's treatment of not explicitly

// This may raise an exception which is actually

// This path appears unavoidable for IE9. When cloning an object

// This requires a wrapper element in IE

// This should fail with an exception

// This still fires onchange a second time for check/radio after blur.

// This transport only deals with cross domain requests

// This will only penalize the array argument path.

// Threshold

// Time diff

// Timeout

// To keep consistent with other XHR implementations, cast the value

// To know if global events are to be dispatched

// To know if the callbacks have already been called at least once

// To support iOS's swipe-to-go-back gesture (when being used in-app).

// Toggle individual class names

// Toggle whole class name

// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id

// Touch Events

// Touches

// Track unmatched elements for set filters

// Traverse its children

// Treat each array item as a scalar.

// Treat null/undefined as ""; convert numbers to string

// Trigger any bound ready events

// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)

// Triggered event must either 1) have no namespace, or 2) have namespace(s)

// Trim the selector passed to compile

// Trust units reported by jQuery.css

// Try convertible dataTypes

// Try to fetch any internally stored data first

// Try to find the camelCased property

// Try to minimize operations if there is only one selector in the list and no seed

// Try to shortcut find operations (as opposed to filters) in HTML documents

// Type selector

// Types

// Types can be a map of types/handlers

// URL without anti-cache param

// Un-match failing elements by moving them back to matcherIn

// Unbind all events (on this namespace, if provided) for the element

// Unique Navigation Elements

// Unique for each copy of jQuery on the page

// Unless errors are allowed to bubble, catch and return them

// Unless we *know* we can detect duplicates, assume their presence

// Update Height

// Update Index

// Update Navigation Buttons

// Update active index in free mode

// Update function for both resolve and progress values

// Update global variables

// Update progress

// Update size

// Update slides

// Update special based on newly reset type

// Update translate

// Uppercase the type

// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)

// Use .is(":disabled") so that fieldset[disabled] works

// Use IE sourceIndex if available on both nodes

// Use a property on the element directly when it is not a DOM element,

// Use a stripped-down indexOf as it's faster than native

// Use data converter to retrieve json after script execution

// Use defaultChecked and defaultSelected for oldIE

// Use defaultValue in place of getAttribute("value")

// Use getAttributeNode to fetch booleans when getAttribute lies

// Use integer dirruns iff this is the outermost matcher

// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)

// Use native DOM manipulation to avoid our domManip AJAX trickery

// Use nodeHook if defined (#1954); otherwise setAttribute is fine

// Use previously-cached element index if available

// Use proper attribute retrieval(#12072)

// Use same guid so caller can remove using origFn

// Use string for doubling so we don't accidentally see scale as unchanged below

// Use textContent for elements

// Use the already-created iframe if possible

// Use the fix-ed jQuery.Event rather than the (read-only) native event

// Use the handy event callback

// Use the original fragment for the last item

// Use the same loop as above to seek `elem` from the start

// Use the trick by Diego Perini

// Use this for any attribute in IE6/7

// Used by jQuery.camelCase as callback to replace()

// Used for iframes

// Velocities

// Velocity

// Vendor-prefix box-sizing

// Verify style float existence

// Verify that getAttribute really returns attributes and not properties

// Vertical

// Virtual Translate

// Visible Slides

// Walk down the tree looking for a discrepancy

// Was never called and is aborted or complete

// Watch for a new set of requests

// We add the dataType to the list if needed

// We allow this because of a bug in IE8/9 that throws an error

// We also use the url parameter if available

// We assume that it's the callback

// We can fire global events as of now if asked to

// We can't cloneNode fragments that contain checked, in WebKit

// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching

// We do not need to do anything for non-Elements

// We don't have any data stored on the element,

// We don't need an array for one selects

// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2

// We extract error from statusText

// We have to close these tags to support XHTML (#13200)

// We have to handle DOM nodes and JS objects differently because IE6-7

// We have to pre-define these values for FF (#10227)

// We must always have either seed elements or outermost context

// We normalize with Webkit giving an empty statusText

// We return focus only if the current focus is inside this instance

// We should always get a number back from opacity

// We use an anonymous function so that context is window

// We use execScript on Internet Explorer

// We use jQuery.prop instead of elem.form

// We use this for POS matching in `select`

// We're checking for pixelPositionVal here instead of boxSizingReliableVal

// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right

// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084

// Webkit/Opera - :checked should return selected option elements

// When data is initially created, via ("key", "val") signature,

// When found, cache indexes on `parent` and break

// When new option element is added to select box we need to

// Where outerHTML is undefined, this still works

// Will be changed later if needed.

// Will be executed only in IE6

// Work with a copy of dataTypes in case we need to modify it for conversion

// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeLists)

// Workaround erroneous numeric interpretation of +"0x"

// Workaround failure to string-cast null input

// Workarounds based on findings by Jim Driscoll

// X-Requested-With header

// XHR cannot access local files, always use ActiveX for that case

// [ reject_list | resolve_list ].disable; progress_list.lock

// `i` is now the count of elements visited above, and adding it to `matchedCount`

// `in` check used to prevent JIT error (gh-2145)

// `name` and `type` must use .setAttribute for WWA (#14901)

// `type` must use .setAttribute for WWA (#14901)

// `xhr.send` may raise an exception, but it will be

// a checked appearance if the defaultChecked value isn't also set

// a subset or equal to those in the bound event (both can have no namespace).

// aborting is no longer a cancellation

// about to be appended to the DOM in IE 6/7 (#8060)

// action, add listener, listener list, final state

// add event listeners

// add listeners to Deferred subordinates; treat others as resolved

// adding 1 corrects loss of precision from parseFloat (#15100)

// advance to the next closing parenthesis

// after a propertychange. Eat the blur-change in special.change.handle.

// after removing valid tokens

// after the browser event has already occurred.

// akin to a jigsaw puzzle, we simply never set it to be sure.

// also - reusing 'index' from above because we have the correct "name"

// and CommonJS for browser emulators (#13566)

// and execute any waiting functions

// and let the cache object itself get destroyed

// and return the corresponding response

// and we are going to proceed with show, we should pretend to be hidden

// and we can't measure the parent instead because it

// and when you create one that shouldn't be

// and/or If-None-Match header later on

// animations on inline elements that are having width/height animated

// are emptied (fx is the type by default)

// are the same in Safari causing offset.left to incorrectly be 0

// aren't supported. They return false on IE (#2968).

// arg is for internal usage only

// arguments are needed to create the filter function

// arguments.

// arr = qsa(selector, document);

// array/object close ("]" or "}"): depth += false - true (decrement)

// array/object open ("[" or "{"): depth += true - false (increment)

// assumes a single number if not a string

// at this point, extra isn't border nor margin, so remove border

// at this point, extra isn't content nor padding, so add border

// at this point, extra isn't content, so add padding

// attach callbacks from options

// attached directly to the object so GC can occur automatically

// attempt a parseFloat and fallback to a string if the parse fails

// attempt to remove filter attribute #6652

// automatically dequeued

// available and use plain properties where available

// because it is its only offset parent

// before this completes

// behavior of getting and setting a style property

// being emptied incorrectly in certain situations (#8070).

// being equal to the identifier C,

// being hidden by cascaded rules or not

// block-level elements need to be inline with layout

// border-box includes padding, so remove it if we want content

// both box models exclude margin, so add it if we want it

// both plain key and camelCase key. #12786

// but a number that has a weird ending, we need to convert it to pixels

// but it would mean to define eight

// but not position css attributes, as those are

// but only if they were gotoEnd

// by 3rd party polyfills/workarounds.

// by a handler lower down the tree; reflect the correct value.

// by name instead of ID

// cache in order to avoid key collisions between internal data and user-defined

// camelCase, specialEasing and expand cssHook pass

// can do given current implementations)

// can't GC object references properly across the DOM-JS boundary

// case, which will result in a "00" `matchedCount` that differs from `i` but is also

// certain elements can have dimension info if we invisibly show them

// change the overflow attribute when overflowX and

// check for vendor prefixed names

// checkbox/radio button to an empty string instead of "on"

// checked="checked" or checked

// checks a cache object for emptiness

// cleanData must set properties to undefined rather than use removeAttribute

// clear up the last queue stop function

// complex values such as "rotate(1rad)" are returned as is.

// computed is undefined for elems on document fragments

// context (optional): If specified, the fragment will be created in this context,

// continually check to see if the document is ready

// copy the src.innerHTML into the dest.innerHTML. #10324

// correct value when it hasn't been explicitly set

// data from the HTML5 data-* attribute

// data.

// data: string of html

// dataTypeExpression is optional and defaults to "*"

// deep extended (see ajaxExtend)

// defaults to document

// deferred[ done | fail | progress ] for forwarding actions to newDefer

// deferred[ resolve | reject | notify ]

// detach all dom ready events

// detachEvent needed property on element, by name of that event,

// determining if an element has been hidden directly using

// did it), otherwise encode params recursively.

// display:none (it is still safe to use offsets if a parent element is

// document.documentMode but it also doesn't support ActiveX so it won't

// documentElement is verified for cases where it doesn't yet exist

// doing this makes sure that the complete handler will be called

// don't match elem in the :animated selector

// e.g. var jQuery = require("jquery")(window);

// elem.tabIndex doesn't always return the

// element in IE9, the outerHTML strategy above is not sufficient.

// elements when setting their display to 'inline' and giving

// empty string instead in this case

// empty the queue first

// enable finishing flag on private data

// ends up in the global cache

// ensure a hooks for this queue

// equals `i`), unless we didn't visit _any_ elements in the above loop because we have

// error in IE

// eslint-disable-line

// eslint-disable-next-line

// event, then durations can be 20+ seconds to slide one (or zero!) slides.

// events

// excess is a negative index

// extend jQuery itself if only one argument is passed

// falling back to the empty string if nothing was stored.

// false until the test is run

// fix oldIE attroperties

// focus(in | out) events fire after focus & blur events,

// focus/blur morphs to focusin/out; ensure we're not firing them right now

// focused in IE11

// followed by the unprefixed version

// for getComputedStyle silently falls back to the reliable elem.style

// for such an element

// for the description of the bug (it existed in older Chrome versions as well).

// force json dataType

// force reflow of newly added node in order to workaround delay

// forces the browser to respect setting selected

// fragment in IE 9

// getClientRects() errors on disconnected elems

// getComputedStyle returns percent when specified for top/left/bottom/right

// getElementById can match elements by name instead of ID

// getElementById is not reliable as a find shortcut

// getPropertyValue is only needed for .css('filter') in IE9, see #12537

// gets computed margin-right based on width of container (#3333)

// gets hook for the prefixed version

// handle cases where value is null/undef or number

// handle most common string cases

// handle queue: false promises

// handleObj is passed to all event handlers

// handled in jQuery.ajax (so no try/catch here)

// hasOwn isn't used here due to false negatives

// height/width overflow pass

// hidden; don safety goggles and see bug #4512 for more information).

// however, it must have a current display style that would benefit from this

// href/src property should get the full normalized URL (#10299/#12915)

// http://bugs.jquery.com/ticket/12359

// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/

// http://javascript.nwbox.com/IEContentLoaded/

// http://jsperf.com/thor-indexof-vs-for/5

// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section

// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx

// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/

// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context

// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html

// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked

// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier

// http://www.w3.org/TR/css3-selectors/#whitespace

// http://www.w3.org/TR/selectors/#empty-pseudo

// http://www.w3.org/TR/selectors/#lang-pseudo

// http://www.w3.org/TR/selectors/#pseudo-classes

// https://bugs.webkit.org/show_bug.cgi?id=136851

// https://code.google.com/p/chromium/issues/detail?id=470258

// https://developer.mozilla.org/en-US/docs/CSS/display

// https://html.spec.whatwg.org/#strip-and-collapse-whitespace

// if "filter:" is present at all, clearType is disabled, we want to avoid this

// if curCSS returns percentage, fallback to offset

// if last one is own, then all properties are own.

// if no content

// if setting opacity to 1, and no other filters exist -

// if the public data object is empty, the private is still empty

// if value === "", then remove inline opacity #12685

// if we are going to the end, we want to run all the tweens

// if we don't include width, step value is 2 to skip over Left and Right

// if we include width, step value is 1 to do all cssExpand values,

// if we're just parsing

// if we're not waiting on anything, resolve the master

// image already loaded...

// in a stylesheet to whatever the default browser style is

// in px

// in that case, element will be second argument

// index in selector

// init accepts an alternate rootjQuery

// inline-level elements accept inline-block;

// innerText usage removed for consistency of new lines (jQuery #11153)

// instead of the first because it can end up

// is auto and position is either absolute or fixed

// is based solely on the element's language value

// is between the current index and the one after it.

// is between the current index and the one before it.

// is present, execute the factory and get jQuery.

// is serialized using JSON.stringify

// is used. In IE 9+ always use the native XHR.

// isDirection

// isHidden might be called from jQuery#filter function;

// isMoved = true;

// jQuery data() is stored in a separate object inside the object's internal data

// jQuery handler

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding

// jQuery.support is not used in Core but other projects attach their

// jscs:ignore requireDotNotation

// just as Sizzle does

// keepScripts (optional): If true, will include scripts passed in the html string

// key/values into a query string

// keys will be converted to camelCase.

// lang value must be a valid identifier

// let .trigger() run the handlers

// lifting finger or mouse vs. moving slowly before lifting the finger/mouse.

// limit single-slide swipes to the default slide duration. This also has the

// look for any active animations, and finish them

// look for any animations in the old queue and finish them

// loop

// make sure that re-using the options doesn't screw things around

// make the cloned public data object a copy from the original

// makes the latter nonnegative.

// margin is only for outerHeight, outerWidth

// matchesSelector(:active) reports false when true (IE9/Opera 11.5)

// methods guaranteed to produce a unique set when starting from a unique set

// might trigger a "stacking dolls" problem

// module.parent = undefined by default

// need to be able to calculate position if either top or left

// nice side effect of matching slide speed if the user stopped moving before

// no element matchers and no seed.

// no getter for object

// nodeType < 6 works because attributes (2) do not appear as children

// nodeType defaults to 9, since context defaults to document

// nodes that are no longer in the document #6963

// non-xml :nth-child(...) stores cache data on `parent`

// normalize float css property

// normalize opt.queue - true/undefined/null -> "fx"

// not intended for public consumption - generates a queueHooks object,

// not quite $.extend, this wont overwrite keys already present.

// note: when an element has margin: auto the offsetLeft and marginLeft

// nth-* requires argument

// numeric x and y parameters for Expr.filter.CHILD

// numerically zero.

// object that has no data at all

// of initialization properties

// old WebKit doesn't clone checked state correctly in fragments

// oldIE doesn't update selected after form reset (#2551)

// on a disconnected node (IE 9)

// on the option

// once despite the number of mutations.  Additional

// only assign if different to avoid unneeded rendering.

// only reproducible on winXP IE8 native, not IE9 in IE8 mode

// option.text throws exceptions (#14686, #14858)

// options in Safari work properly

// or :nth-last-child(...) or :nth(-last)?-of-type(...)

// or beginning with the identifier C immediately followed by "-".

// or radio button. Worse, IE6-7 fail to give the cloned element

// or returns the current one

// or when there is no matching style property that exists.

// other cases ("," or primitive): depth += true - true (numeric cast)

// otherwise we skip this part

// otherwise, reject

// otherwise, set new filter values

// overflowY are set to the same value

// parseFloat NaNs numeric-cast false positives (null|true|false|"")

// passing an empty string as a 3rd parameter to .css will automatically

// promise[ done | fail | progress ] = list.add

// properties to it so it needs to exist.

// proportional to the parent element instead

// pseudo-class names are case-insensitive

// purpose in continuing

// push.apply(_, arraylike) throws on ancient WebKit

// qSa(:focus) reports false when true (Chrome 21)

// rather than jQuery in Firefox

// rather than make the css module depend on the offset module, we just check for it here

// reach this code.

// readyState === "complete" is good enough for us to call the dom ready in oldIE

// regarding Nodelist length in IE

// release memory in IE

// remember that false/true cast respectively to 0/1

// removeData also checks for emptiness and clears the expando if empty

// request header to a null-value.

// reset margins

// resolve when we played the last frame

// respecting firingIndex overrides and runtime changes

// results is for internal usage only

// retrieved directly we need to fire the callback

// return a css property mapped to a potentially vendor prefixed property

// save the callback name for future use

// scripts is true for back-compat

// see here for display values:

// set position first, in-case top/left are set even on static elem

// setting a boolean content attribute,

// setting or getting the value

// shallow copied over onto the existing cache

// shift arguments if data argument was omitted

// shortcut for names that are not vendor prefixed

// show any hidden elements after setting opacity to 0

// show/hide pass

// since its presence should be enough

// since that compresses better and they're computed together anyway.

// skip the boolean and the target

// so $("p:first").is("p:last") won't return true for a doc with two "p".

// so implement the relevant behavior ourselves

// so migrate can support jQuery.sub (gh-2101)

// so that event delegation works in jQuery.

// so use "detach" method as fast way to get rid of the element

// so use a roundabout getElementsByName test

// so use it instead of delete

// so we don't default to auto

// so, simple values such as "10px" are parsed to Float.

// some non-html elements return undefined for offsetWidth, so check for null/undefined

// something got wrong

// spaces as combinators

// split the camel cased version by spaces unless a key with the spaces exists

// ssr

// start the next in the queue if the last step wasn't forced

// state = [ resolved | rejected ]

// statusText for faulty cross-domain requests

// store className if set

// store state if its toggle - enables .stop().toggle() to "reverse"

// style.removeAttribute is IE Only, but so apparently is this code path...

// subtraction forces infinities to NaN

// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285

// swappable if display is none or starts with table except

// table row; if so, offsetWidth/Height are not reliable for use when

// that pass the validator function

// that takes "flat" options (not to be deep extended)

// the code to shortcut on the same path as a DOM node with no cache

// the count of uncompleted subordinates

// the master Deferred.

// the matched set of elements

// the ready event fires. See #6781

// the stack via arguments.caller.callee and Firefox dies if

// them layout

// then normalize statusText and status for non-aborts

// then remove the whole classname (if there was one, the above saved it).

// this implies that the user stopped moving a finger then released.

// this throws a TypeError, but we will just return undefined.

// three lines.

// throw uncatchable exceptions if you attempt to set expando properties

// timeout handle

// timers currently will call their complete callbacks, which will dequeue

// to allow fixing the IE8 delegated submit issue (gh-2332)

// to avoid the constant reflow

// to avoid treating leading and trailing

// to display:none and there are still other visible table cells in a

// to missing dependency), remove it.

// to properly expose it to GC

// to string and ignore `undefined`.

// triggers are redundant and are very costly

// try the string as a key before any manipulation

// try/catch handles cases where IE balks (such as removing a property on window)

// turn off finishing flag

// unguarded in another place, it seems safer to just disable JSHint for these

// unless wrapped in a div with non-breaking characters in front of it.

// use step hook for back compat - use cssHook if its there - use .style if its

// use the active box-sizing model to add/subtract irrelevant styles

// user can override it through ajaxSetup method

// value of true after appended to the DOM (IE6/7)

// we assume that getBoundingClientRect is available when computed position is fixed

// we need the check for style in case a browser which returns unreliable values

// we're done with this property

// when an event is called after a page has unloaded

// when in an optgroup

// whenever `document.activeElement` is accessed on an iframe

// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order

// with IE non-native events

// with both ajaxSettings and settings fields.

// xml :nth-child(...)

// you can add your own custom options here if

// you try to trace through "use strict" call chains. (#13335)

//"use strict";

//convert "normal" to computed value
