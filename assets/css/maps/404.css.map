{"version":3,"sources":["module/_sanitize.scss","404.css","module/_utility.scss","404.scss","module/_gradation.scss"],"names":[],"mappings":"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","file":"404.css","sourcesContent":["$root-box-sizing: border-box !default;\n$root-cursor: default !default;\n$root-font-family: sans-serif !default;\n$root-font-size: 16px !default;\n$root-line-height: 1.5 !default;\n$root-text-rendering: optimizeLegibility !default;\n\n$html-background-color: #FFFFFF !default;\n$anchor-text-decoration: none !default;\n$form-element-background-color: transparent !default;\n$form-element-min-height: if(unitless($root-line-height), #{$root-line-height}em, if(unit($root-line-height) != '%', $root-line-height, null)) !default;\n$media-element-vertical-align: middle !default;\n$monospace-font-family: monospace !default;\n$nav-list-style: none !default;\n$selection-background-color: #B3D4FC !default;\n$selection-text-shadow: none !default;\n$small-font-size: 75% !default;\n$table-border-collapse: collapse !default;\n$table-border-spacing: 0 !default;\n$textarea-resize: vertical !default;\n\n\n\n// Normalization\n\n:root {\n\t-ms-overflow-style: -ms-autohiding-scrollbar; // IE11+\n\toverflow-y: scroll; // All browsers without overlaying scrollbars\n\ttext-size-adjust: 100%; // iOS 8+\n}\n\naudio:not([controls]) {\n\tdisplay: none; // Chrome 40+, iOS 8+, Safari 8+\n}\n\ndetails {\n\tdisplay: block; // Firefox 36+, Internet Explorer 11+, Windows Phone 8.1+\n}\n\ninput {\n\t&[type=\"number\"] {\n\t\twidth: auto; // Firefox 36+\n\t}\n\n\t&[type=\"search\"] {\n\t\t-webkit-appearance: textfield; // Safari 8+\n\n\t\t&::-webkit-search-cancel-button,\n\t\t&::-webkit-search-decoration {\n\t\t\t-webkit-appearance: none; // Safari 8+\n\t\t}\n\t}\n}\n\nmain {\n\tdisplay: block; // Android 4.3-, Internet Explorer 11+, Windows Phone 8.1+\n}\n\nsummary {\n\tdisplay: block; // Firefox 36+, Internet Explorer 11+, Windows Phone 8.1+\n}\n\npre {\n\toverflow: auto; // Internet Explorer 11+\n}\n\nprogress {\n\tdisplay: inline-block; // Internet Explorer 11+, Windows Phone 8.1+\n}\n\nsmall {\n\tfont-size: $small-font-size; // All browsers\n}\n\ntemplate {\n\tdisplay: none; // Android 4.3-, Internet Explorer 11+, iOS 7-, Safari 7-, Windows Phone 8.1+\n}\n\ntextarea {\n\toverflow: auto; // Internet Explorer 11+\n}\n\n[hidden] {\n\tdisplay: none; // Internet Explorer 10-\n}\n\n[unselectable] {\n\tuser-select: none; // Android 4.4+, Chrome 40+, Firefox 36+, iOS 8+, Safari 8+\n}\n\n\n\n// Universal inheritance\n\n*,\n::before,\n::after {\n\tbox-sizing: inherit;\n}\n\n* {\n\tfont-size: inherit;\n\tline-height: inherit;\n}\n\n::before,\n::after {\n\ttext-decoration: inherit;\n\tvertical-align: inherit;\n}\n\n\n\n// Opinionated defaults\n\n// specify solid border style of all elements\n\n*,\n::before,\n::after {\n\tborder-style: solid;\n\tborder-width: 0;\n}\n\n// remove margin and padding of all elements\n\n* {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n// specify the root styles of the document\n\n:root {\n\tbox-sizing: $root-box-sizing;\n\tcursor: $root-cursor;\n\tfont: #{$root-font-size}/#{$root-line-height} $root-font-family;\n\ttext-rendering: $root-text-rendering;\n}\n\n// specify the html background color\n\nhtml {\n\tbackground-color: $html-background-color;\n}\n\n// specify the text decoration of anchors\n\na {\n\ttext-decoration: $anchor-text-decoration;\n}\n\n// specify media element style\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n\tvertical-align: $media-element-vertical-align;\n}\n\n// specify the background color of form elements\n\nbutton,\ninput,\nselect,\ntextarea {\n\tbackground-color: $form-element-background-color;\n}\n\n// specify inheritance of form elements\n\nbutton,\ninput,\nselect,\ntextarea {\n\tcolor: inherit;\n\tfont-family: inherit;\n\tfont-style: inherit;\n\tfont-weight: inherit;\n}\n\n// specify the minimum height of form elements\n\nbutton,\ninput,\nselect,\ntextarea {\n\tmin-height: $form-element-min-height;\n}\n\n// specify the font family of code elements\n\ncode,\nkbd,\npre,\nsamp {\n\tfont-family: $monospace-font-family, monospace;\n}\n\n// specify the list style of nav lists\n\nnav ol,\nnav ul {\n\tlist-style: $nav-list-style;\n}\n\n// style select like a standard input\n\nselect {\n\t-moz-appearance: none;    // Firefox 36+\n\t-webkit-appearance: none; // Chrome 41+\n\n\t&::-ms-expand {\n\t\tdisplay: none;        // Internet Explorer 11+\n\t}\n\n\t&::-ms-value {\n\t\tcolor: currentColor;  // Internet Explorer 11+\n\t}\n}\n\n// specify the border styles of tables\n\ntable {\n\tborder-collapse: $table-border-collapse;\n\tborder-spacing: $table-border-spacing;\n}\n\n// specify textarea resizability\n\ntextarea {\n\tresize: $textarea-resize;\n}\n\n// specify text selection background color and omit drop shadow\n\n::selection {\n\tbackground-color: $selection-background-color; // required when declaring ::selection\n\ttext-shadow: $selection-text-shadow;\n}\n\n// hide content from screens but not screenreaders\n\n@media screen {\n\t[hidden~=\"screen\"] {\n\t\tdisplay: inherit;\n\t}\n\n\t[hidden~=\"screen\"]:not(:active):not(:focus):not(:target) {\n\t\tclip: rect(0 0 0 0) !important;\n\t\tposition: absolute !important;\n\t}\n}\n",":root {\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  overflow-y: scroll;\n  text-size-adjust: 100%; }\n\naudio:not([controls]) {\n  display: none; }\n\ndetails {\n  display: block; }\n\ninput[type=\"number\"] {\n  width: auto; }\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield; }\n  input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none; }\n\nmain {\n  display: block; }\n\nsummary {\n  display: block; }\n\npre {\n  overflow: auto; }\n\nprogress {\n  display: inline-block; }\n\nsmall {\n  font-size: 75%; }\n\ntemplate {\n  display: none; }\n\ntextarea {\n  overflow: auto; }\n\n[hidden] {\n  display: none; }\n\n[unselectable] {\n  user-select: none; }\n\n*,\n::before,\n::after {\n  box-sizing: inherit; }\n\n* {\n  font-size: inherit;\n  line-height: inherit; }\n\n::before,\n::after {\n  text-decoration: inherit;\n  vertical-align: inherit; }\n\n*,\n::before,\n::after {\n  border-style: solid;\n  border-width: 0; }\n\n* {\n  margin: 0;\n  padding: 0; }\n\n:root {\n  box-sizing: border-box;\n  cursor: default;\n  font: 16px/1.5 sans-serif;\n  text-rendering: optimizeLegibility; }\n\nhtml {\n  background-color: #FFFFFF; }\n\na {\n  text-decoration: none; }\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  vertical-align: middle; }\n\nbutton,\ninput,\nselect,\ntextarea {\n  background-color: transparent; }\n\nbutton,\ninput,\nselect,\ntextarea {\n  color: inherit;\n  font-family: inherit;\n  font-style: inherit;\n  font-weight: inherit; }\n\nbutton,\ninput,\nselect,\ntextarea {\n  min-height: 1.5em; }\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace; }\n\nnav ol,\nnav ul {\n  list-style: none; }\n\nselect {\n  -moz-appearance: none;\n  -webkit-appearance: none; }\n  select::-ms-expand {\n    display: none; }\n  select::-ms-value {\n    color: currentColor; }\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ntextarea {\n  resize: vertical; }\n\n::selection {\n  background-color: #B3D4FC;\n  text-shadow: none; }\n\n@media screen {\n  [hidden~=\"screen\"] {\n    display: inherit; }\n  [hidden~=\"screen\"]:not(:active):not(:focus):not(:target) {\n    clip: rect(0 0 0 0) !important;\n    position: absolute !important; } }\n\n.clearfix:before, .clearfix:after {\n  content: \"\";\n  display: block; }\n\n.clearfix:after {\n  clear: both; }\n\n.not-found h1 {\n  padding: 16px;\n  font-size: 28px;\n  text-align: center; }\n  .not-found h1 > a {\n    color: #454545; }\n  .not-found h1 img {\n    max-width: 100%;\n    height: auto; }\n\n.error-head {\n  padding: 16px 0;\n  text-align: center;\n  border-bottom: 1px solid #ddd; }\n  .error-head h2 {\n    letter-spacing: 2px;\n    font-size: 32px;\n    font-weight: bold; }\n\n.error-content {\n  padding: 16px 0; }\n  .error-content h3 {\n    position: relative;\n    max-width: 800px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 24px;\n    font-weight: normal;\n    font-size: 22px;\n    text-align: center; }\n    @media (max-width: 767px) {\n      .error-content h3 {\n        font-size: 18px; } }\n    .error-content h3 > span {\n      position: relative;\n      z-index: 1;\n      display: inline-block;\n      padding: 6px 20px;\n      line-height: 1;\n      background-color: #fff; }\n    .error-content h3:before, .error-content h3:after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      display: block;\n      width: 50%;\n      height: 1px;\n      margin-top: auto;\n      margin-bottom: auto; }\n    .error-content h3:before {\n      left: 0;\n      background-color: #454545;\n      background: -webkit-linear-gradient(-45deg, rgba(69, 69, 69, 0) 0%, #454545 100%);\n      background: -moz-linear-gradient(-45deg, rgba(69, 69, 69, 0) 0%, #454545 100%);\n      background: -ms-linear-gradient(-45deg, rgba(69, 69, 69, 0) 0%, #454545 100%);\n      background: -o-linear-gradient(-45deg, rgba(69, 69, 69, 0) 0%, #454545 100%);\n      background: linear-gradient(135deg, rgba(69, 69, 69, 0) 0%, #454545 100%);\n      filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1, StartColorStr='rgba(69, 69, 69, 0)', EndColorStr='#454545'); }\n    .error-content h3:after {\n      right: 0;\n      background-color: rgba(69, 69, 69, 0);\n      background: -webkit-linear-gradient(-45deg, #454545 0%, rgba(69, 69, 69, 0) 100%);\n      background: -moz-linear-gradient(-45deg, #454545 0%, rgba(69, 69, 69, 0) 100%);\n      background: -ms-linear-gradient(-45deg, #454545 0%, rgba(69, 69, 69, 0) 100%);\n      background: -o-linear-gradient(-45deg, #454545 0%, rgba(69, 69, 69, 0) 100%);\n      background: linear-gradient(135deg, #454545 0%, rgba(69, 69, 69, 0) 100%);\n      filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1, StartColorStr='#454545', EndColorStr='rgba(69, 69, 69, 0)'); }\n  .error-content p {\n    max-width: 680px;\n    margin-left: auto;\n    margin-right: auto;\n    line-height: 1.6; }\n\n.error-menu {\n  display: flex;\n  justify-content: center;\n  flex-flow: row wrap;\n  max-width: 800px;\n  margin: 48px auto;\n  padding: 10px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 12px;\n  box-shadow: 0 3px 5px 0 rgba(69, 69, 69, 0.2); }\n  .error-menu ul {\n    list-style: none; }\n    .error-menu ul > li {\n      margin-left: 1em;\n      margin-bottom: 5px; }\n      .error-menu ul > li:before {\n        content: \"\";\n        display: inline-block;\n        width: 0;\n        height: 0;\n        margin-left: -8px;\n        border: 4px solid transparent;\n        border-left: 5px solid #ddd;\n        transform: translateX(-4px); }\n      .error-menu ul > li > a {\n        color: #569; }\n        .error-menu ul > li > a:hover {\n          text-decoration: underline; }\n  .error-menu > div {\n    width: 200px;\n    margin: 15px; }\n    .error-menu > div > h3 {\n      padding-bottom: 8px;\n      font-size: 18px;\n      border-bottom: 1px solid #ddd; }\n\n.copycolor {\n  padding: 5px 0;\n  background-color: #585858; }\n  .copycolor .copyright {\n    margin-bottom: 0;\n    line-height: 1;\n    color: #fff; }\n","// clearfix\n@mixin clearfix() {\n\t&:before,\n\t&:after {\n\t\tcontent: \"\";\n\t\tdisplay: block;\n\t}\n\t&:after {\n\t\tclear: both;\n\t}\n}\n%clearfix {\n\t@include clearfix();\n}\n.clearfix {\n\t@extend %clearfix;\n}\n\n// Center Block\n@mixin center-block() {\n\tdisplay: block;\n\tmargin-left: auto;\n\tmargin-right: auto;\n}\n\n%center-block {\n\t@include center-block();\n}\n\n// Sizing helpers\n@mixin size($width, $height) {\n\twidth: $width;\n\theight: $height;\n}\n@mixin square($size) {\n\t@include size($size, $size);\n}\n@mixin sikaku($size) {\n\t@include size($size, $size);\n}\n\n\n// Media Query\n$screen-xs:                  480px !default;\n//** Deprecated `$screen-xs-min` as of v3.2.0\n$screen-xs-min:              $screen-xs !default;\n//** Deprecated `$screen-phone` as of v3.0.1\n$screen-phone:               $screen-xs-min !default;\n\n// Small screen / tablet\n//** Deprecated `$screen-sm` as of v3.0.1\n$screen-sm:                  768px !default;\n$screen-sm-min:              $screen-sm !default;\n//** Deprecated `$screen-tablet` as of v3.0.1\n$screen-tablet:              $screen-sm-min !default;\n\n// Medium screen / desktop\n//** Deprecated `$screen-md` as of v3.0.1\n$screen-md:                  992px !default;\n$screen-md-min:              $screen-md !default;\n//** Deprecated `$screen-desktop` as of v3.0.1\n$screen-desktop:             $screen-md-min !default;\n\n// Large screen / wide desktop\n//** Deprecated `$screen-lg` as of v3.0.1\n$screen-lg:                  1200px !default;\n$screen-lg-min:              $screen-lg !default;\n//** Deprecated `$screen-lg-desktop` as of v3.0.1\n$screen-lg-desktop:          $screen-lg-min !default;\n\n// So media queries don't overlap when required, provide a maximum\n$screen-xs-max:              ($screen-sm-min - 1) !default;\n$screen-sm-max:              ($screen-md-min - 1) !default;\n$screen-md-max:              ($screen-lg-min - 1) !default;\n$screen-sp: 480px !default;\n$screen-tab: 768px !default;\n$screen-pc: 992px !default;\n$screen-pc-lg: 1200px !default;\n\n@mixin max-media($mode: lg) {\n\t@if $mode == xs {\n\t\t@media (max-width: $screen-xs-max) {\n\t\t\t@content;\n\t\t}\n\t} @else if $mode == sm {\n\t\t@media (max-width: $screen-sm-max) {\n\t\t\t@content;\n\t\t}\n\t} @else if $mode == md {\n\t\t@media (max-width: $screen-md-max) {\n\t\t\t@content;\n\t\t}\n\t} @else {\n\t\t@media (max-width: $screen-md-max) {\n\t\t\t@content;\n\t\t}\n\t}\n}\n@mixin min-media($mode: lg) {\n\t@if $mode == xs {\n\t\t@media (min-width: $screen-xs-min) {\n\t\t\t@content;\n\t\t}\n\t} @else if $mode == sm {\n\t\t@media (min-width: $screen-sm-min) {\n\t\t\t@content;\n\t\t}\n\t} @else if $mode == md {\n\t\t@media (min-width: $screen-md-min) {\n\t\t\t@content;\n\t\t}\n\t} @else {\n\t\t@media (min-width: $screen-lg-min) {\n\t\t\t@content;\n\t\t}\n\t}\n}\n\n@mixin media($mode: pc) {\n\t@if $mode == sp {\n\t\t@media (max-width: $screen-xs-max) {\n\t\t\t@content;\n\t\t}\n\t} @else if $mode == tab {\n\t\t@media (max-width: $screen-sm-max) {\n\t\t\t@content;\n\t\t}\n\t} @else if $mode == pc {\n\t\t@media (min-width: 769px) {\n\t\t\t@content;\n\t\t}\n\t} @else {\n\t\t@media (min-width: 1200px) {\n\t\t\t@content;\n\t\t}\n\t}\n}\n","// @import \"compass\";\n// Default Setting\n@import \"module/variable\";\n@import \"module/fonts\";\n\n// Core CSS\n@import \"module/sanitize\";\n\n// Utility\n@import \"module/utility\";\n@import \"module/animation\";\n\n// Vendor Mixin\n@import \"module/vendor\";\n@import \"module/gradation\";\n// エラーページ ---*/\n.error404 {\n\t\n}\n.not-found {\n\th1 {\n\t\tpadding: 16px;\n\t\tfont-size: 28px;\n\t\ttext-align: center;\n\t\t& > a {\n\t\t\tcolor: #454545;\n\t\t}\n\t\timg {\n\t\t\tmax-width: 100%;\n\t\t\theight: auto;\n\t\t}\n\t}\n}\n.error-body {\n\t\n}\n.error-head {\n\tpadding: 16px 0;\n\ttext-align: center;\n\tborder-bottom: 1px solid #ddd;\n\th2 {\n\t\tletter-spacing: 2px;\n\t\tfont-size: 32px;\n\t\tfont-weight: bold;\n\t}\n}\n.error-content {\n\tpadding: 16px 0;\n\th3 {\n\t\tposition: relative;\n\t\tmax-width: 800px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tmargin-bottom: 24px;\n\t\tfont-weight: normal;\n\t\tfont-size: 22px;\n\t\ttext-align: center;\n\t\t@media (max-width: $screen-tab - 1) {\n\t\t\tfont-size: 18px;\n\t\t}\n\t\t& > span {\n\t\t\tposition: relative;\n\t\t\tz-index: 1;\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: 6px 20px;\n\t\t\tline-height: 1;\n\t\t\tbackground-color: #fff;\n\t\t}\n\t\t&:before,&:after {\n\t\t\tcontent: \"\";\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tbottom: 0;\n\t\t\tdisplay: block;\n\t\t\twidth: 50%;\n\t\t\theight: 1px;\n\t\t\tmargin-top: auto;\n\t\t\tmargin-bottom: auto;\n\t\t}\n\t\t&:before {\n\t\t\tleft: 0;\n\t\t\t@include sgradient(\n\t\t\t\t$from: left top,\n\t\t\t\t$colors:(\n\t\t\t\t\t(rgba(#454545, 0), 0%),\n\t\t\t\t\t(rgba(#454545, 1), 100%)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\t&:after {\n\t\t\tright: 0;\n\t\t\t@include sgradient(\n\t\t\t\t$from: left top,\n\t\t\t\t$colors:(\n\t\t\t\t\t(rgba(#454545, 1), 0%),\n\t\t\t\t\t(rgba(#454545, 0), 100%)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\tp {\n\t\tmax-width: 680px;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tline-height: 1.6;\n\t}\n}\n\n.error-menu {\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-flow: row wrap;\n\tmax-width: 800px;\n\tmargin: 48px auto;\n\tpadding: 10px;\n\tbackground-color: #fff;\n\tborder: 1px solid #ddd;\n\tborder-radius: 12px;\n\tbox-shadow: 0 3px 5px 0 rgba(#454545, .2);\n\tul {\n\t\tlist-style: none;\n\t\t& > li {\n\t\t\tmargin-left: 1em;\n\t\t\tmargin-bottom: 5px;\n\t\t\t&:before {\n\t\t\t\tcontent: \"\";\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: 0;\n\t\t\t\theight: 0;\n\t\t\t\tmargin-left: -8px;\n\t\t\t\tborder: 4px solid transparent;\n\t\t\t\tborder-left: 5px solid #ddd;\n\t\t\t\ttransform: translateX(-4px);\n\t\t\t}\n\t\t\t& > a {\n\t\t\t\tcolor: #569;\n\t\t\t\t&:hover {\n\t\t\t\t\ttext-decoration: underline;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t& > div {\n\t\twidth: 200px;\n\t\tmargin: 15px;\n\t\t& > h3 {\n\t\t\tpadding-bottom: 8px;\n\t\t\tfont-size: 18px;\n\t\t\tborder-bottom: 1px solid #ddd;\n\t\t}\n\t}\n}\n.e-gnavi {\n\t\n}\n.copycolor {\n\tpadding: 5px 0;\n\tbackground-color: #585858;\n\t.copyright {\n\t\tmargin-bottom: 0;\n\t\tline-height: 1;\n\t\tcolor: #fff;\n\t}\n}\n","@function contains($colors,$var) {\n\t$contains: false;\n\t@each $item in $colors { @if $item == $var { $contains: true; } }\n\t@return $contains;\n}\n\n@function orientation-string($type, $from, $w3c:false) {\n\t$string: '';\n\n\t@if $w3c {\n\n\t\t@if $type == 'linear' {\n\t\t\t@if $from == 'top' or $from == 'bottom' { $string: 'to bottom, '; }\n\t\t\t@else if $from == 'left' or $from == 'right' { $string: 'to right, '; }\n\t\t\t@else if $from == (left top) or $from == (top left) or $from == (right bottom) or $from == (bottom right) { $string: '135deg, '; }\n\t\t\t@else { $string: '45deg, '; }\n\n\t\t} @else if $type == 'radial' { $string: 'ellipse at ' + $from + ', '; }\n\n\t} @else { // new webkit, moz, ms, o\n\n\t\t@if $type == 'linear' {\n\t\t\t@if $from == 'top' or $from == 'bottom' { $string: 'top, '; }\n\t\t\t@else if $from == 'left' or $from == 'right' { $string: 'left, '; }\n\t\t\t@else if $from == (left top) or $from == (top left) or $from == (right bottom) or $from == (bottom right) { $string: '-45deg, '; }\n\t\t\t@else { $string: '45deg, '; }\n\n\t\t} @else if $type == 'radial' { $string: $from + ', ellipse cover, '; }\n\n\t}\n\n\t@return $string;\n}\n\n@function color-substring($colors) {\n\t$i: 1;\n\t$substring: '';\n\t$string: '';\n\n\t@while $i < length($colors) {\n\n\t\t$substring: nth($colors, $i) + ' ' + nth($colors, $i+1);\n\t\t$string: $string + $substring;\n\t\t$i: $i + 1;\n\n\t}\n\n\t@return $string;\n}\n\n@function color-string($colors) {\n\t$i: 1;\n\t$spacer: ', ';\n\t$substring: '';\n\t$string: '';\n\n\t@while $i <= length($colors) {\n\t\t@if $i == length($colors) { $spacer: ''; }\n\n\t\t$substring: color-substring(nth($colors, $i)) + $spacer;\n\t\t$string: $string + $substring;\n\t\t$i: $i + 1;\n\n\t}\n\n\t@return $string;\n}\n\n@function ie-gradient-type($direction) {\n\t@if $first-color { @return nth(nth($colors, 1), 1) }\n\t@else { @return nth(nth($colors, length($colors)), 1) }\n}\n\n\n@function ie-colors($colors, $first-color:true) {\n\t@if $first-color { @return nth(nth($colors, 1), 1) }\n\t@else { @return nth(nth($colors, length($colors)), 1) }\n}\n\n@mixin sgradient($type:'linear', $from:'top', $colors:((rgba(42,179,221,1), 0%),(rgba(183,80,80,1), 100%))) {\n\n\t$orientation-string: orientation-string($type, $from);\n\t$orientation-string-w3c: orientation-string($type, $from, $w3c:true);\n\n\t$color-string: #{color-string($colors)};\n\n\t$css-string: gradient(#{$orientation-string}#{$color-string});\n\t$css-string-w3c: gradient(#{$orientation-string-w3c}#{$color-string});\n\n\t$ie-gradient-type: 0;\n\t@if $type != 'vertical' { $ie-gradient-type: 1 }\n\n\tbackground-color: #{ie-colors($colors, false)};\n\tbackground: -webkit-#{$type}-#{$css-string};\n\tbackground:    -moz-#{$type}-#{$css-string};\n\tbackground:     -ms-#{$type}-#{$css-string};\n\tbackground:      -o-#{$type}-#{$css-string};\n\tbackground:         #{$type}-#{$css-string-w3c};\n\tfilter: progid:DXImageTransform.Microsoft.gradient(GradientType=#{$ie-gradient-type}, StartColorStr='#{ie-colors($colors)}', EndColorStr='#{ie-colors($colors, false)}');\n}\n"]}